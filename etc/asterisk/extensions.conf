[general]
static = yes
writeprotect = yes
;clearglobalvars = no

[globals]
cellPierrePrefix = 1
cellPierreNum = 5551231234
cellPierreName = Pierre P.
cellGalaPrefix = 1
cellGalaNum = 5551235678
cellGalaName = Gala S.
;*30 force PSTN, *31 force Standard, *32 force Premium
routeType = *30

pierreEmail = redacted@gmail.com
galaEmail = privacy@gmail.com

;ask for confirmation to forward overseas call between these hours (local time at callee's location)
quietPeriodStart = 22:00
quietPeriodEnd = 10:00

timettsScriptPath = /usr/share/asterisk/custom-script/timetts.sh
sendrecScriptPath = /usr/share/asterisk/custom-script/sendrec.sh
getrateApiUrl = https://api.callwithus.com/api/getrate/
getbalanceApiUrl = https://api.callwithus.com/api/account/
cwuApiKey = fffffffffffffffffffff

;delay in seconds before asterisk places the callback
callbackDelay = 12

unlimStartTime = 17:00
unlimEndTime = 08:00


paidTrunkPrefix = cwu-
freeTrunkPrefix = freephonie
nmaApiKeyGala = ffffffffffffffffffffffffffffffffffffffffffffffff
nmaApiKeyPierreMobile = ffffffffffffffffffffffffffffffffffffffffffffffff
nmaApiUrl = https://www.notifymyandroid.com/publicapi/notify

;time to put a callerid(num) that failed authentication too many times for (in seconds)
jailSentenceTime = 18000

[incoming]
;context receiving incoming DID calls

exten => s,1,Goto(incoming,1)

exten => 5554561234,1,Goto(incoming,1)

exten => incoming,1,NoOp(unfiltered CALLERID(all)=${CALLERID(all)})
;	same => n,NoOp(CALLERID(ani)=${CALLERID(ani)})
;	same => n,NoOp(CALLERID(rdnis)=${CALLERID(rdnis)})
;	same => n,NoOp(CALLERID(dnid)=${CALLERID(dnid)})
	same => n,Set(CALLERID(num)=${FILTER(0-9,${CALLERID(num)})})
	same => n,NoOp(filtered CALLERID(all)=${CALLERID(all)})
	same => n,NoOp(SIP_HEADER(TO)=${SIP_HEADER(TO)})
	same => n,Set(calledDID=$["${SIP_HEADER(TO)}":"[0-9a-zA-Z]?<sip\:([0-9]*)"])
	same => n,GotoIf($[${calledDID}]?:end)
	same => n,GotoIf($[${calledDID}=5554561234]?CallbackRequest,verifyCaller,1:)
	same => n,GotoIf($[${calledDID}=883510009900000]?:)
	same => n,GotoIf($[${calledDID}=48223000000]?FromGalaPolishDID,s,1:)

exten => pierre,1,Dial(SIP/${paidTrunkPrefix}pierre/${CellPierrePrefix}${CellPierreNum})
    
[CallbackRequest]
exten => verifyCaller,1,GotoIf($[$[${CALLERID(num)}=${cellPierrePrefix}${cellPierreNum}]|$[${CALLERID(num)}=${cellPierreNum}]]?fromPierre,1:)
	same => n,GotoIf($[$[${CALLERID(num)}=${cellGalaPrefix}${cellGalaNum}]|$[${CALLERID(num)}=${cellGalaNum}]]?fromGala,1:)
	same => n,Goto(fromUnknown,1:)
	
exten => fromPierre,1,Set(__trunkUser=pierre)
	same => n,Goto(checkUnltd,1)
	
exten => fromGala,1,Set(__trunkUser=gala)
	same => n,Goto(checkUnltd,1)
	
exten => fromUnknown,1,Set(__trunkUser=unknown)
	same => n,GotoIf($[${DB_EXISTS(callback_jail/${CALLERID(num)})}]?checkJailtime:notInJail)
	same => n(checkJailtime),NoOp("Has a record")
	same => n,Set(jailedOn=${DB(callback_jail/${CALLERID(num)})})
	same => n,GotoIf($[$[${jailedOn}+${jailSentenceTime}] < $[${STRFTIME(,,%s)}]]?freeFromJail:stillJailed)
	same => n(freeFromJail),NoOp("Has done their time")
	same => n,DB_DELETE(callback_jail/${CALLERID(num)})
	same => n(notInJail),Goto(checkUnltd,1)
	same => n(stillJailed),NoOp("Still in jail")
	same => n,Hangup(21)

;Until calls are free to receive on DID...	
;exten => checkUnltd,1,GoToIfTime(${unlimEndTime}-${unlimStartTime},mon-fri,*,*?createCallFile,1:CallbackAnswer,${trunkUser},1)
exten => checkUnltd,1,Goto(createCallFile,1)

exten => createCallFile,1,GotoIf($[${LEN(${CALLERID(num)})}=10]?addPrefix:setupCallback)
	same => n(addPrefix),Set(CALLERID(num)=1${CALLERID(num)})
	same => n(setupCallback),System(printf "Channel: SIP/${paidTrunkPrefix}${trunkUser}/${routeType}${CALLERID(num)}\\nCallerID: \"Callback\" <15554561234>\\nMaxRetries: 2\\nRetryTime: 10\\nWaitTime: 15\\nContext: CallbackAnswer\\nExtension: ${trunkUser}\\nPriority: 1\n" > /tmp/callback.call)
	same => n,System(touch -r /tmp/callback.call -d '${callbackDelay} second' /tmp/callback.call)
	same => n,System(chown asterisk:asterisk /tmp/callback.call)
	same => n,System(mv /tmp/callback.call /var/spool/asterisk/outgoing)
	same => n,Hangup(21)
	
[CallbackAnswer]
exten => pierre,1,Set(CALLERID(all)="${cellPierreName}" <${cellPierrePrefix}${cellPierreNum}>)
	same => n,Answer()
	same => n,Set(__trunkUser=pierre)
	same => n,Set(__sendrecAddr=${pierreEmail})
	same => n,Set(__nmaApiKey=${nmaApiKeyPierreMobile})
        same => n,Gosub(subGetBalance,getBalance,1)
	same => n,Set(__balanceBefore=${GOSUB_RETVAL})
	same => n,Set(__DYNAMIC_FEATURES=hangup#record)
	same => n,Goto(promptNum,1)

exten => gala,1,Set(CALLERID(all)="${cellGalaName}" <${cellGalaPrefix}${cellGalaNum}>)
	same => n,Answer()
	same => n,Set(__trunkUser=gala)
	same => n,Set(__sendrecAddr=${galaEmail})
	same => n,Set(__nmaApiKey=${nmaApiKeyGala})
        same => n,Gosub(subGetBalance,getBalance,1)
        same => n,Set(__balanceBefore=${GOSUB_RETVAL})
	same => n,Set(__DYNAMIC_FEATURES=hangup#record)
	same => n,Goto(promptNum,1)

exten => unknown,1,Answer()
	same => n,Set(__trunkUser=unknown)
	same => n,Set(failCount=0)
;	same => n(unauth),agi(googletts.agi,"Please authenticate")
	same => n(unauth),Read(login,custom/please-auth,4,,,5)
	same => n,agi(googletts.agi,"Go on.")
	same => n,Read(password,,8,,,5)
	same => n,GotoIf($[${DB_EXISTS(callback_users/${login})}]?checkPassword:failed)
	same => n(checkPassword),GotoIf($[${DB(callback_users/${login})}=${password}]?resolveName:failed)
	same => n(failed),Set(failCount=$[${failCount}+1])
	same => n,GotoIf($[${failCount}<3]?unauth:failquit)
	same => n(failquit),agi(googletts.agi,"Sorry.")
	same => n,Set(DB(callback_jail/${CALLERID(num)})=${STRFTIME(,,%s)})
	same => n,Hangup()
	same => n(resolveName),Set(name=${DB(callback_usernames/${login})})
	same => n,agi(googletts.agi,"Hi ${name}!")
	same => n,Goto(${name},1)
	
exten => promptNum,1,Set(__originalCidNum=${CALLERID(num)})
	same => n(promptNum),Read(numToDial,custom/callback-number-prompt)
	same => n,Set(__numToDial=${numToDial}) ;make the variable visible to the recording feature
	same => n,GotoIf($[${LEN(${numToDial})}=0]?tryAgain:checkPrivacy)
	same => n(tryAgain),agi(googletts.agi,"Again,")
	same => n,Goto(promptNum)
	same => n(checkPrivacy),GotoIf($["${numToDial:0:4}"="*774"]?hideCallerId:continue)
	same => n(hideCallerId),Set(CALLERID(num)=13709531754)
	same => n,Set(numToDial=${numToDial:4})
	same => n(continue),Gosub(subChooseTrunk,paid,1)
;	same => n,agi(googletts.agi,"Call completed.")
	same => n,Set(CALLERID(num)=${originalCidNum})
	same => n,Goto(promptNum)

exten => h,1,Gosub(subEndCallSummary,callSummary,1)

[FromGalaPolishDID]
exten => s,1,Set(__trunkUser=gala)
	same => n,GotoIf($[${LEN(${CALLERID(num)})}=9]?add48,1:check11,1)

exten => add48,1,Set(CALLERID(num)=48${CALLERID(num)})
	same => n,Goto(checkGuestlist,1)
	
exten => check11,1,GotoIf($[${LEN(${CALLERID(num)})}=11]?check48Prefix,1:playbackError,invalidOrMaskedCid)

exten => check48Prefix,1,GotoIf($[${CALLERID(num)}:48]?checkGuestlist,1:playbackError,invalidOrMaskedCid)

exten => playbackError,1(invalidOrMaskedCid),Answer()
	same => n,Noop(Error CID masked or invalid. CALLERID(num) = ${CALLERID(num)})
;	same => n,agi(googletts.agi,"Error 1 1 0. Please unmask your number and try again.")
	same => n,agi(googletts.agi,"Błąd 1 1 0. Proszę odblokuj swój numer i spróbuj ponowni",pl)
	same => n,Hangup()
	
exten => checkGuestlist,1,Gotoif($[${DB_EXISTS(auth_cid/${CALLERID(num)})}]?acceptPolishCaller,1:rejectPolishCaller,1)

exten => rejectPolishCaller,1,Answer(1000)
;	same => n,agi(googletts.agi,"Error 1 2 0. Your number is not recognized. Please call from your usual home or mobile phone and try again.")
	same => n,agi(googletts.agi,"Błąd 1 2 0. Twój numer nie został rozpoznany. Spróbuj ponownie używajac własnego numeru telefonu.",pl)
	same => n,Hangup()
	
exten => acceptPolishCaller,1,Set(CALLERID(name)=${DB(auth_cid/${CALLERID(num)})})
	same => n,NoOp(CALLERID(name)=${CALLERID(name)})
	same => n,Set(__notifEligible=1)
	same => n,agi(googletts.agi,"Witam.",pl)
	same => n,Goto(checkLocalTime,1)
	
exten => checkLocalTime,1,GoToIfTime(${quietPeriodEnd}-${quietPeriodStart},*,*,*?doCallGalaCell,1:speakLocalTime,1)

exten => speakLocalTime,1,Set(currTimeHours=${STRFTIME(,,%H)})
	same => n,Set(currTimeMins=${STRFTIME(,,%M)})
	same => n,Set(currTimeAP=${STRFTIME(,,%p)})
	same => n,GoSub(subPolishTimeConversion,select,case${currTimeHours})
	same => n,Wait(1)
; Please note that the time is now ${currTimeHours} ${currTimeMins} ${currTimeAP} in Montreal... Do you still wish to call Gala? Press 1 to confirm, press 2 or hangup to cancel.
;    same => n,agi(googletts.agi,"Obecnie jest ${currTimeHours} ${currTimeMins} w Montrealu... Czy nadal chcesz zadzwonić do Gali? Naciśnij 1 żeby kontynuować, naciśnij 2 albo rozłącz się żeby anulować",pl,any)
;	same => n,System(rm /tmp/${UNIQUEID}-timetts*)
	same => n,System(${timettsScriptPath} "${CurrTimeHours}" ${currTimeMins} ${UNIQUEID})
	same => n,Read(choice,/tmp/${UNIQUEID}-timetts,1,3,5)
	same => n,System(rm /tmp/${UNIQUEID}-timetts*)
	same => n,Wait(0.5)
	same => n,GotoIf($[${choice}=1]?doCallGalaCell,1:)
	same => n,GotoIf($[${choice}=2]?abortCallGalaCell,1:)
	same => n,agi(googletts.agi,"Nieprawidłowy wybór.",pl,,1.4)
	same => n,Goto(speakLocalTime,1)
    
exten => abortCallGalaCell,1,agi(googletts.agi,"Dowidzenia.",pl,,1.4)
	same => n,Hangup()

exten => doCallGalaCell,1,agi(googletts.agi,"Łączy z Galą, proszę czekać...",pl)
	;calling Gala now, please wait...
	same => n,Dial(SIP/${paidTrunkPrefix}${trunkUser}/${routeType}${cellGalaPrefix}${cellGalaNum}&SIP/telephone,,,g)

exten => h,1,NoOp(DIALEDTIME=0${DIALEDTIME})
	same => n,NoOp(notifEligible=${notifEligible})
	same => n,GotoIf($[${notifEligible}]?checkNotif:notEligible)
	same => n(notEligible),NoOp(Call not eligible for missed call notification)
	same => n(checkNotif),GosubIf($[0${DIALEDTIME}<70]?subSendNotif,missedCallGala,1:)

;NMA legwork
[subSendNotif]
exten => missedCallGala,1,NoOp(Sending missed call notification)
	same => n,System(wget --post-data 'apikey=${nmaApiKeyGala}&application=Asterisk&event=Missed call&description=From ${CALLERID(name)} \(${CALLERID(num)}\) on ${STRFTIME(,,%d-%b-%Y at %T)}' ${nmaApiUrl} --no-check-certificate -qO-)
	same => n,Return()

[subGetBalance]
exten => getBalance,1,NoOp(Getting the balance)
	same => n,Set(acctBalance=${SHELL(wget -qO- --post-data 'key=${cwuApiKey}' ${getbalanceApiUrl} --no-check-certificate)})
;	same => n,NoOp(Parsing regex)
;	same => n,Set(regex="(-?\d*.\d*)")
;	same => n,NoOp(regex="${regex}")
;	same => n,Set(acctBalance=${"${acctBalance}"=~${regex}})
	same => n,Set(acctBalance=${acctBalance:7:-1})
	same => n,NoOp(Balance="${acctBalance}")
	same => n,Return(${acctBalance})

[subEndCallSummary]
exten => callSummary,1,NoOp(Sending call summary)
;	same => n,Set(accountBalance=${SHELL(wget -qO- --post-data 'key=${cwuApiKey}' ${getbalanceApiUrl} --no-check-certificate --delete-after)})
;	same => n,Set(accountBalance=${GoSub(subGetBalance,getBalance,1)})
	same => n,Gosub(subGetBalance,getBalance,1)
	same => n,Set(accountBalance=${GOSUB_RETVAL})
	same => n,Set(balanceAfter=${GOSUB_RETVAL})
	same => n,Set(callCost=$[$[$[ROUND($[${balanceBefore}-${balanceAfter}]*10000)/10000]]])
	same => n,System(wget --post-data 'apikey=${nmaApiKey}&application=Asterisk&event=Call summary&description=Last call cost: ${callCost}$ %0ABalance: ${accountBalance}$' ${nmaApiUrl} --no-check-certificate -qO-)
	same => n,Return()

[subChooseTrunk]
exten => paid,1,GotoIf($[$["${numToDial}":"033"]]?checkLen:notFranceFree,1)
	same => n(checkLen),GotoIf($[${LEN(${numToDial})}=11]?checkLandline:notFranceFree,1)
	same => n(checkLandline),GotoIf($["${numToDial}":"033157082200"]?notFranceFree,1:)
	same => n,GotoIf($["${numToDial}":"033[123459]"]?isFranceFree,1:)
	same => n,GotoIf($["${numToDial}":"03380[05]"]?isFranceFree,1:notFranceFree,1)

exten => unpaid,1,GotoIf($[$["${numToDial}":"33"]]?checkLen:notAllowed,1)
	same => n(checkLen),GotoIf($[${LEN(${numToDial})}=11]?checkLandline:notAllowed,1)
	same => n(checkLandline),GotoIf($["${numToDial}":"33[123459]"]?isFranceFree,1:)
	same => n,GotoIf($["${numToDial}":"3380[05]"]?isFranceFree,1:notAllowed,1)

exten => isFranceFree,1,agi(googletts.agi,"0 cent per minute. Star 5 to record, Star 9 to hangup.")
	same => n,agi(googletts.agi,"Dialling...")
	same => n,Playtones(ring)
	same => n,Dial(SIP/${freeTrunkPrefix}/0${numToDial:3},,Wg)
	same => n,GotoIf($[${recSwitch}]?stoprecEndofcall:end)
	same => n(stoprecEndofcall),NoOp(Recording stopped (default))
	same => n,Macro(callRec)
	same => n(end),agi(googletts.agi,"Call completed.")
	same => n,Return()
	
exten => notFranceFree,1,Set(rateDollars=${SHELL(wget -qO- --post-data 'key=${cwuApiKey}&number=${numToDial}' ${getrateApiUrl} --no-check-certificate --delete-after)})
	same => n,GotoIf($["${rateDollars}"="-1002"]?invalidNumber:)
	same => n,Set(rateDollars=$["${rateDollars}":"rate=([0-9.]*) "])
	same => n,Set(rateCents=$[${rateDollars}*100])
	same => n,agi(googletts.agi,"${rateCents} cents per minute. Star 5 to record, Star 9 to hangup.")
	same => n(dial),agi(googletts.agi,"Dialling...")
	same => n,Playtones(ring)
	same => n,GotoIf($["${numToDial}":"\+?18\d{9}"])?notTollFree:tollFree)
	same => n(tollFree),Dial(SIP/${paidTrunkPrefix}${trunkUser}/${numToDial},,Wg)
	same => n,Goto(continue)
	same => n(notTollFree),Dial(SIP/${paidTrunkPrefix}${trunkUser}/${routeType}${numToDial},,Wg)
	same => n(continue),GotoIf($["${recSwitch}"="1"]?stoprecEndofcall:end)
	same => n,GotoIf($["${recSwitch}"="1"]?stoprecEndofcall:end)
	same => n(stoprecEndofcall),NoOp(Recording stopped (default))
	same => n,Macro(callRec)
	same => n(end),agi(googletts.agi,"Call completed.")
	same => n,Return()
	same => n(invalidNumber),AGI(googletts.agi,"Invalid number, please try again.")
	same => n,Return()

exten => notAllowed,1,AGI(googletts.agi,"Sorry, this destination is not free and cannot be called using your free account.")
	same => n,Hangup(52)

exten => h,1,Gosub(subEndCallSummary,callSummary,1)

[macro-callRec]
exten => s,1,NoOp(Call record macro triggered)
	same => n,GotoIf($["${recSwitch}"="0" | "${recSwitch}"=""]?startrec:stoprec)
	same => n(startrec),Set(__recSwitch=1)
	same => n,NoOp(Recording started)
	same => n,NoOp(CID is "${CALLERID(num)}")
	same => n,GotoIf($["${CALLERID(num)}":"[0-9]+"]?noCidRewrite:cidRewrite)
	same => n(cidRewrite),NoOp(REWRITING CID)
	same => n,Set(__originalCidNum=unknown)
	same => n,Goto(setDate)
	same => n(noCidRewrite),NoOp(NOT REWRITING CID)
	same => n,Set(__originalCidNum=${CALLERID(num)})
	;YMD for filename
	same => n(setDate),Set(YMD=${STRFTIME(,,%Y%m%d)})
	;YMD for email text
	same => n,Set(YMD2=${STRFTIME(,,%d-%m-%Y)})
	;HMS for filename
	same => n,Set(HMS=${STRFTIME(,,%H%M%S)})
	;HMS for email text
	same => n,Set(HMS2=${STRFTIME(,,%H:%M:%S)})
	;Random number for added security
	same => n,Set(randomString=${RAND()})
	same => n,Set(recFileName=${YMD}-${HMS}_${originalCidNum}-to-${numToDial})
	same => n,MixMonitor(/tmp/${recFileName}_${randomString}.wav,,${sendrecScriptPath} ${recFileName}_${randomString} ${sendrecAddr} ${YMD2} ${HMS2} ${originalCidNum} ${numToDial})
;	same => n,MixMonitor(/tmp/${recFileName}_${randomString}.wav,,${sendrecScriptPath} ${recFileName} ${sendrecAddr} ${YMD2} ${HMS2} ${originalCidNum} ${numToDial})
	same => n,MacroExit
	same => n(stoprec),Set(__RecSwitch=0)
	same => n,StopMonitor
	same => n,NoOp(Recording stopped)
	same => n,MacroExit

[subPolishTimeConversion]
exten => select,1,NoOp(Case ${CurrTimeHours})
	same => n(case1),Set(CurrTimeHours=pierwsza)
	same => n,Return()
	same => n(case2),Set(CurrTimeHours=druga)
	same => n,Return()
	same => n(case3),Set(CurrTimeHours=trzecia)
	same => n,Return()
	same => n(case4),Set(currTimeHours=czwarta)
	same => n,Return()
	same => n(case5),Set(CurrTimeHours=pi%C4%85ta)
	same => n,Return()
	same => n(case6),Set(CurrTimeHours=sz%C3%B3sta)
	same => n,Return()
	same => n(case7),Set(CurrTimeHours=si%C3%B3dma)
	same => n,Return()
	same => n(case8),Set(CurrTimeHours=%C3%B3sma)
	same => n,Return()
	same => n(case9),Set(CurrTimeHours=dziewi%C4%85ta)
	same => n,Return()
	same => n(case10),Set(CurrTimeHours=dziesi%C4%85ta)
	same => n,Return()
	same => n(case11),Set(CurrTimeHours=jedenasta)
	same => n,Return()
	same => n(case12),Set(CurrTimeHours=dwunasta)
	same => n,Return()
	same => n(case13),Set(CurrTimeHours=trzynasta)
	same => n,Return()
	same => n(case14),Set(CurrTimeHours=czternasta)
	same => n,Return()
	same => n(case15),Set(CurrTimeHours=pi%C4%99tnasta)
	same => n,Return()
	same => n(case16),Set(CurrTimeHours=szesnasta)
	same => n,Return()
	same => n(case17),Set(CurrTimeHours=siedemnasta)
	same => n,Return()
	same => n(case18),Set(CurrTimeHours=osiemnasta)
	same => n,Return()
	same => n(case19),Set(CurrTimeHours=dziewi%C4%99tnasta)
	same => n,Return()
	same => n(case20),Set(CurrTimeHours=dwudziesta)
	same => n,Return()
	same => n(case21),Set(CurrTimeHours=dwudiesta pierwsza)
	same => n,Return()
	same => n(case22),Set(CurrTimeHours=dwudiesta druga)
	same => n,Return()
	same => n(case23),Set(CurrTimeHours=dwudiesta trzecia)
	same => n,Return()
	same => n(case0),Set(CurrTimeHours=dwudziesta czwarta)
	same => n,Return()
    


[webcallback]
;context used to handle callback requests made from the webpage

exten => callMeEN,1,NoOp(Callback request from webpage, EN)
	same => n,Answer()
	same => n,Wait(1.5)
	same => n,agi(googletts.agi,"Please hold for Pierre.")
	same => n,Wait(1)
    same => n,Set(CALLERID(all)="Web Callback" <5554561234>)
	same => n,Dial(SIP/cwu-pierre/${routeType}${cellPierrePrefix}${cellPierreNum})
	same => n,Hangup()

exten => callMeFR,1,NoOp(Callback request from webpage, FR)
        same => n,Answer()
        same => n,Wait(1.5)
	same => n,agi(googletts.agi,"Je vous mets en relation avec Pierre, un instant je vous prie.",fr,,1.5)
	same => n,Wait(1)
	same => n,Set(CALLERID(all)="Web Callback" <5554561234>)
	same => n,Dial(SIP/cwu-pierre/${routeType}${cellPierrePrefix}${cellPierreNum})
	same => n,Hangup()



[Pierre]
exten => telephone,1,Dial(SIP/telephone)

exten => _Z.,1,Set(refer=1)
	same => n,Set(__numToDial=${EXTEN})
	same => n,Goto(doCall,1)

exten => _033.,1,Set(refer=1)
	same => n,Set(__numToDial=${EXTEN})
	same => n,Goto(doCall,1)

exten => _+Z.,1,Set(refer=1)
	same => n,Set(__numToDial=${EXTEN:1})
	same => n,Goto(doCall,1)

exten => _*774Z.,1,Set(refer=1)
	same => n,Set(__numToDial=${EXTEN})
	same => n,Goto(doCall,1)
	
exten => _*774+Z.,1,Set(refer=1)
	same => n,Set(__numToDial=${EXTEN})
	same => n,Goto(doCall,1)

exten => doCall,1,GotoIf($[${refer}]?ok:noRefer)
	same => n(ok),Set(__trunkUser=pierre)
	same => n,Set(__sendrecAddr=${pierreEmail})
	same => n,Set(__nmaApiKey=${nmaApiKeyPierreMobile})
	same => n,Set(__DYNAMIC_FEATURES=hangup#record)
    same => n,Gosub(subGetBalance,getBalance,1)
	same => n,Set(__balanceBefore=${GOSUB_RETVAL})
	same => n(checkPrivacy),GotoIf($["${numToDial:0:4}"="*774"]?hideCallerId:continue)
	same => n(hideCallerId),Set(CALLERID(num)="0")
	same => n,Set(numToDial=${numToDial:4})
	same => n(continue),Gosub(subChooseTrunk,paid,1)
	same => n,Hangup()
	same => n(noRefer),Answer()
	same => n,AGI(googletts.agi,"Wrong calling method")
	same => n,Hangup(21)

[Gala]
exten => telephone,1,Dial(SIP/telephone)

exten => _Z.,1,Set(refer=1)
	same => n,Set(__numToDial=${EXTEN})
	same => n,Goto(doCall,1)

exten => _033.,1,Set(refer=1)
	same => n,Set(__numToDial=${EXTEN}) 
        same => n,Goto(doCall,1)

exten => _+Z.,1,Set(refer=1)
	same => n,Set(__numToDial=${EXTEN:1})
	same => n,Goto(doCall,1)
	
exten => _*774Z.,1,Set(refer=1)
	same => n,Set(__numToDial=${EXTEN})
	same => n,Goto(doCall,1)
	
exten => _*774+Z.,1,Set(refer=1)
	same => n,Set(__numToDial=${EXTEN})
	same => n,Goto(doCall,1)

exten => doCall,1,GotoIf($[${refer}]?ok:noRefer)
	same => n(ok),Set(__trunkUser=gala)
	same => n,Set(__sendrecAddr=${galaEmail})
	same => n,Set(__nmaApiKey=${nmaApiKeyGala})
	same => n,Set(__DYNAMIC_FEATURES=hangup#record)
    same => n,Gosub(subGetBalance,getBalance,1)
	same => n,Set(__balanceBefore=${GOSUB_RETVAL})
	same => n(checkPrivacy),GotoIf($["${numToDial:0:4}"="*774"]?hideCallerId:continue)
	same => n(hideCallerId),Set(CALLERID(num)= )
	same => n,Set(numToDial=${numToDial:4})
	same => n(continue),Gosub(subChooseTrunk,paid,1)
	same => n,Hangup()
	same => n(noRefer),Answer()
	same => n,AGI(googletts.agi,"Wrong calling method")
	same => n,Hangup(21)

[Floflo]
exten => _Z.,1,Set(refer=1)
        same => n,Set(__numToDial=${EXTEN})
        same => n,Goto(doCall,1)

exten => _+Z.,1,Set(refer=1)
        same => n,Set(__numToDial=${EXTEN:1})
        same => n,Goto(doCall,1)

exten => _*774Z.,1,Set(refer=1)
        same => n,Set(__numToDial=${EXTEN})
        same => n,Goto(doCall,1)

exten => _*774+Z.,1,Set(refer=1)
        same => n,Set(__numToDial=${EXTEN})
        same => n,Goto(doCall,1)

exten => doCall,1,GotoIf($[${refer}]?ok:noRefer)
;       same => n(ok),Set(__trunkUser=gala)
;       same => n,Set(__sendrecAddr=${galaEmail})
        same => n(ok),Set(__DYNAMIC_FEATURES=hangup)
        same => n(checkPrivacy),GotoIf($["${numToDial:0:4}"="*774"]?hideCallerId:continue)
        same => n(hideCallerId),Set(CALLERID(num)= )
        same => n,Set(numToDial=${numToDial:4})
        same => n(continue),Gosub(subChooseTrunk,unpaid,1)
        same => n,Hangup()
        same => n(noRefer),Answer()
        same => n,AGI(googletts.agi,"Wrong calling method")
        same => n,Hangup(21)

exten => pierre,1,Dial(SIP/pierre&SIP/pierre-mobile)

[debug]
exten => 48223000000,1,Set(CALLERID(num)=224069710)
	same => n,Goto(FromGalaPolishDID,s,1)

exten => _*Z.cid[a-zA-Z0-9].,1,Set(CALLERID(num)=$["${EXTEN}":"\*?[0-9]*cid(\+?[a-zA-Z0-9]*)"])
	same => n,Dial(SIP/cwu-pierre/$["${EXTEN}":"([*0-9]*)"])

exten => _Z.cid[a-zA-Z0-9].,1,Set(CALLERID(num)=$["${EXTEN}":"\*?[0-9]*cid(\+?[a-zA-Z0-9]*)"])
	same => n,Dial(SIP/cwu-pierre/$["${EXTEN}":"([*0-9]*)"])
	
exten => cbunk,1,Set(CALLERID(num)=5554756324)
	same => n,Goto(CallbackAnswer,unknown,1)
	
exten => fromUnk,1,Set(CALLERID(num)=15551231234)
	same => n,Goto(CallbackRequest,fromUnknown,1)
	
exten => fromPierre,1,Set(CALLERID(num)=15551231234)
	same => n,Goto(CallbackAnswer,pierre,1)
	
exten => debug,1,Answer()
	same => n,Playback(beep)
	same => n,Wait(0.3)
	same => n,Playback(beep)
	same => n,Hangup()

exten => testGetBal,1,Gosub(subGetBalance,getBalance,1)
	same => n,Set(balance=${GOSUB_RETVAL})
	same => n,NoOp(Resultat=${balance})
	same => n,Hangup()

exten => testCallcost,1,Gosub(subGetBalance,getBalance,1)
        same => n,Set(balBefore=${GOSUB_RETVAL})
        same => n,Set(balAfter=$[${balBefore}-12.0223])
        same => n,Set(callCost=$[${balBefore}-${balAfter}])
        same => n,Set(accountBalance=$[$[$[ROUND($[${balBefore}-${balAfter}]*10000)/10000]]])
        same => n,NoOp(callCost="${callCost}")
        same => n,Hangup()

exten => testjail,1,Set(CALLERID(num)=5554756324)
	same => n,Goto(CallbackRequest,verifyCaller,1)

exten => telephone,1,Dial(SIP/telephone)

exten => pierre-mobile,1,Dial(SIP/pierre-mobile)

exten => webcben,1,Goto(webcallback,callMeEN,1)

exten => webcbfr,1,Goto(webcallback,callMeFR,1)
